name: Comment on PR after running script

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  comment-on-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node 18.16.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.16.x'
          cache: 'yarn'

      - name: Set Yarn Version
        id: set-version
        run: |
          yarn set version 4.3.1
          echo "YARN_VERSION=$(yarn -v)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: yarn install

      - name: Run script and capture output
        id: run-script
        run: |
          echo "Running script..."
          yarn ts-coverage > result.txt
          export RESULT=$(grep "specific-info-pattern" result.txt || echo "not-found")

      - name: Upload ts-coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ts-coverage-report
          path: coverage-ts
          retention-days: 2

      - name: Get artifact URL
        id: artifact-url
        run: echo "::set-output name=url::${{ steps.upload-ts-coverage.outputs.artifact_url }}"

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const artifactUrl = '${{ steps.artifact-url.outputs.url }}';
            // Read result.txt content
            const resultContent = fs.readFileSync('result.txt', 'utf8');

            // Prepare comment body
#            let commentBody = `### Script Execution Result\n\n`;
#            commentBody += `\`\`\`\n${resultContent}\n\`\`\``;
            
            const commentBody = `
              ### ts-coverage Artifacts
              You can access the coverage artifacts [here](${artifactUrl}).
            `;

            // Add a comment to the PR
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
